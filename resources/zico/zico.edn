; This is default configuration for ZICO collector.

{

 :home-dir #or [#env ZICO_HOME, #prop zico.home, #prop user.dir]

 ; HTTP settings
 :http     {:port                8640
            :host                "0.0.0.0"
            :http?               true
            :join?               false,
            :daemon?             false
            :min-threads         2
            :max-threads         32
            :max-queued-requests 256
            :max-form-size       67108864                                       ; 64MB for big traces
            ;:tls-ciphers [
            ;   "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
            ;   "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
            ;   "TLS_RSA_WITH_AES_128_CBC_SHA256", "TLS_RSA_WITH_AES_128_CBC_SHA",
            ;   "TLS_RSA_WITH_AES_256_CBC_SHA256", "TLS_RSA_WITH_AES_256_CBC_SHA"]
            }

 :log      {:path            #join [#ref [:home-dir] "/log"]
            :dump            false
            :dump-path       #join [#ref [:home-dir] "/log/dump.log"]
            :mode            :time-rolling
            :max-history     7
            :max-size        16777216
            :current-fname   "zico.log"
            :history-fname   "zico-%d{yyyy-M-dd-HH-mm}-%i.log.gz"
            :console-pattern "%-12date{YYYY-MM-dd HH:mm:ss.SSS} %-5level - %msg%n"
            :file-pattern    "%-12date{YYYY-MM-dd HH:mm:ss.SSS} %-5level - %msg%n"
            :file-level      :debug
            :console-level   :debug
            :log-levels
                             {:ROOT         :debug
                              :org.eclipse  :info
                              :io.zorka.tdb :info
                              }}

 :auth {:type :http-basic
        :users {"admin" "zico"}}


 :elastic {:url "http://127.0.0.1:9200"}

 ; Configuration of main data store
 :tstore {:url          #ref [:elastic :url]
          :username     #join [#ref [:elastic :username] nil]
          :password     #join [#ref [:elastic :password] nil]
          :name         "ztrace"
          :max-size     4096
          :num-shards   1
          :num-replicas 0}

 :filter-defs
           [{:attr "component", :description "Component", :icon "awe/puzzle#light"}
            {:attr "local.service", :description "Service", :icon "awe/cubes#light"}]

 :trace-types
           {:db  {:component "db", :render :db.statement, :icon "awe/database#darkgreen"}
            :http {:component "http", :render :http.url, :icon "awe/globe#steelblue"}
            :amqp {:component "amqp", :render :call.method, :icon "awe/paper-plane-empty#darkred"}
            :spring {:component "spring", :render :method, :icon "awe/leaf#darkgreen"}
            :breaker {:component "breaker", :render :call.method, :icon "awe/flash#darkkhaki"}
            :job {:component "job", :render :call.method, :icon "awe/clock#darkred"}
            :jms {:component "jms", :render :call.method, :icon "awe/paper-plane-empty#darkkhaki"}
            :ejb {:component "ejb", :render :call.method, :icon "awe/cube#steelblue"}
            }
 }

